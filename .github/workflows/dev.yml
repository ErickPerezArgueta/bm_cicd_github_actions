name: snowflake-dataops-dev

# Controls when the action will run. 
on:
  push:
    branches:
      - dev

jobs:
  setup_snowflake_workspace_dev:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python 3.9.18
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Python packages
        run: pip install -r requirements.txt

      - name: Download SnowSQL
        run:  curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
      
      - name: Install SnowSQL
        run: SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

      - name: Configure snowcli
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SF_USERNAME }}
          SNOWSQL_PWD: ${{ secrets.SF_PASSWORD }}
          SNOWSQL_ROLE: ${{ secrets.SF_ROLE }}
          SNOWSQL_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SNOWSQL_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_SCHEMA_DEV: ${{secrets.SF_SCHEMA_DEV}}
        run: |
          mkdir -p ~/.snowsql
          echo "[connections.dev]" > ~/.snowsql/config
          echo "accountname = $SNOWSQL_ACCOUNT" >> ~/.snowsql/config
          echo "username = $SNOWSQL_USER" >> ~/.snowsql/config
          echo "password = $SNOWSQL_PWD" >> ~/.snowsql/config
          echo "rolename = $SNOWSQL_ROLE" >> ~/.snowsql/config
          echo "warehousename = $SNOWSQL_WAREHOUSE" >> ~/.snowsql/config
          echo "dbname = $SNOWSQL_DATABASE" >> ~/.snowsql/config
          echo "schemaname = $SNOWFLAKE_SCHEMA_DEV" >> ~/.snowsql/config
          python $GITHUB_WORKSPACE/src/execute_sql.py --sql_file src/setup/general/env_space.sql
        #  python $GITHUB_WORKSPACE/src/tasks/execute_sql.py --sql_file src/tasks/query_prueba.sql
        #--sql_file src/tasks/query_prueba.sql

      # Deploy setup
      - name: Deploy setup SQL script with SnowSQL and loads data to stage
        run: |
         ~/bin/snowsql -c dev -q "PUT file://$GITHUB_WORKSPACE/data/banana_quality_raw.csv @BANANA_QUALITY.DEV.RAW_DATA AUTO_COMPRESS=FALSE;"

      - name: Loads data to stage
        run: ~/bin/snowsql -c dev -f $GITHUB_WORKSPACE/src/loading/load_raw_file.sql

      - name: process, train and registry
        run: |
          python $GITHUB_WORKSPACE/src/sproc/sp_process.py
          python $GITHUB_WORKSPACE/src/sproc/sp_train.py
      #    python $GITHUB_WORKSPACE/src/sproc/sp_registry.py

      - name: Creates train pipeline
        run: ~/bin/snowsql -c dev -f $GITHUB_WORKSPACE/src/tasks/pipeline_train.sql

      # echo "SNOWSQL_ROLE=${SNOWSQL_ROLE}" >> $GITHUB_ENV
      # echo "SNOWSQL_ACCOUNT=${SNOWSQL_ACCOUNT}" >> $GITHUB_ENV
      # echo "SNOWSQL_USER=${SNOWSQL_USER}" >> $GITHUB_ENV
      # echo "SNOWSQL_WAREHOUSE=${SNOWSQL_WAREHOUSE}" >> $GITHUB_ENV
      # echo "SNOWSQL_DATABASE=${SNOWSQL_DATABASE}" >> $GITHUB_ENV
      # echo "SNOWSQL_SCHEMA_DEV=${SNOWFLAKE_SCHEMA_DEV}" >> $GITHUB_ENV